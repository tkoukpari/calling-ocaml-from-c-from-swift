(executables
 (names mod)
 (modes object))

;; take the ocaml object file and create a static library that can be linked
;; with c/swift

(rule
 (targets libocaml.a)
 (deps mod.exe.o)
 (action
  (run ar rcs %{targets} %{deps})))

;; compile c into an object filea - ocaml_where so c can access ocaml headers

(rule
 (targets main.o)
 (deps main.c)
 (action
  (run clang -c -I %{ocaml_where} main.c -o main.o)))

;; use swiftc to compile main.swift into an executable. link c object file

(rule
 (targets main)
 (deps main.swift main.o)
 (action
  (run
   swiftc
   main.swift
   main.o
   -o
   main
   -L
   %{ocaml_where}
   -L
   .
   -locaml
   -lcamlrun)))
